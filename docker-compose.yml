# https://github.com/alexeagleson/docker-node-postgres-template
version: '3.8'
services:
  # These are the configurations for our Node app
  # When Docker Compose starts this container it will automatically
  # use the Dockerfile in the directory to configure it
  app:
    build: .
    depends_on:
      # Our app does not work without our database
      # so this ensures our database is loaded first
      - postgres
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      # Maps our current project directory `.` to
      # our working directory in the container
      - ./:/app/
      # node_modules workaround for volumes
      # https://stackoverflow.com/a/32785014
      - /app/node_modules
    command:
      - sh
      - -c
      - |
        yarn db:setup
        yarn db:seed:all
        yarn start
  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Node app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the
  # address of this container.
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      # You can set the value of environment variables
      # in your docker-compose.yml file
      # Our Node app will use these to connect
      # to the database
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=skeleton_nodejs
    ports:
      # Standard port for PostgreSQL databases
      - "5432:5432"
#    volumes:
      # When the PostgresSQL container is started it will run any scripts
#      - db:/var/lib/postgresql/data
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
#      - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql

  # PostgreSQL pgAdmin panel accessible at http://localhost:16543/
  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@credify.one"
      PGADMIN_DEFAULT_PASSWORD: "1234567890"
    ports:
      - "16543:80"
    depends_on:
      - postgres
